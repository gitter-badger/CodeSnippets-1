#!/usr/bin/env python3
# -*- coding: utf-8 -*-
__author__ = 'pixelexio'
__email__ = 'hello@pixelex.io'
__license__ = 'GPLv3'

"""
UUID1,3,4,5 examples with a random "URL"-generator as bonus.
"""
import uuid

# Random URL generated by uuid4 for uuid3 and uuid5
def url_gen():
    url = "https://"+ uuid.uuid4().hex[0:4] +"."+ uuid.uuid4().hex +"." + uuid.uuid4().hex[0:3]
    return url
print ("\nURL, generated from uuid4 for uuid3 and uuid5:")
print(url_gen())

# to generate SHA-1 hash uuid 
# using NAMESPACE_URL as namespace
print("")
print ("uuid5, SHA-1 hash of a namespace and name:")
for times in range(4):
    print (uuid.uuid5(uuid.NAMESPACE_URL, url_gen()), "    .hex:", uuid.uuid5(uuid.NAMESPACE_URL, url_gen()).hex) 

# to generate MD5 hash uuid 
# using NAMESPACE_URL as namespace
print("")
print ("uuid3, MD5 hash of a namespace and name:")
for times in range(4):
    print (uuid.uuid3(uuid.NAMESPACE_URL, url_gen()), "    .hex:", uuid.uuid3(uuid.NAMESPACE_URL, url_gen()).hex) 

# Printing random id using uuid4() 
print("")
print("uuid4, gen from pseudo-random numbers:")
for times in range(4):
    print (uuid.uuid4(), "    .hex:", uuid.uuid4().hex) 

# Printing random id using uuid1() 
print("")
print("uuid1, based on a MAC address and a timer:")
for times in range(4):
    print (uuid.uuid1(), "    .hex:", uuid.uuid1().hex)